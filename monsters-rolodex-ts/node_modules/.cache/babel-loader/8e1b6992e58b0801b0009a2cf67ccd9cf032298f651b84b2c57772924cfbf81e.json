{"ast":null,"code":"var _jsxFileName = \"/media/rk/disk2/React/Typescript/monsters-rolodex/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { getData } from './utils/data.utils';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  console.log('render');\n  const [searchField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  //console.log(searchField);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await getData('https://jsonplaceholder.typicode.com/users');\n      setMonsters(users);\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n  const onSearchChange = event => {\n    //console.log(event.target.value);\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: 'monsters-search-box',\n      placeholder: 'Search Monsters',\n      onChangeHandler: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YjM+qWSyF3I2IMx5PoA1UagYOq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","getData","CardList","SearchBox","jsxDEV","_jsxDEV","App","_s","console","log","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilteredMonsters","fetchUsers","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChangeHandler","_c","$RefreshReg$"],"sources":["/media/rk/disk2/React/Typescript/monsters-rolodex/src/App.tsx"],"sourcesContent":["import { ChangeEvent } from 'react';\nimport { useState, useEffect } from 'react';\n\nimport './App.css';\nimport { getData } from './utils/data.utils';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nexport type Monster = {\n  id: string,\n  name: string,\n  email: string\n}\n\nconst App = () => {\n  console.log('render');\n  const [searchField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  //console.log(searchField);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await getData<Monster[]>('https://jsonplaceholder.typicode.com/users');\n      setMonsters(users);\n    }\n\n    fetchUsers();\n  }, []);\n  \n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField])\n\n  const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    //console.log(event.target.value);\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox className={'monsters-search-box'} placeholder={'Search Monsters'} onChangeHandler={onSearchChange} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAACa,QAAQ,CAAC;EAClE;;EAEAZ,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAK,GAAG,MAAMhB,OAAO,CAAY,4CAA4C,CAAC;MACpFY,WAAW,CAACI,KAAK,CAAC;IACpB,CAAC;IAEDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,MAAMkB,mBAAmB,GAAGN,QAAQ,CAACO,MAAM,CAAEC,OAAO,IAAK;MACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACb,WAAW,CAAC;IAC/D,CAAC,CAAC;IAEFK,mBAAmB,CAACG,mBAAmB,CAAC;EAC1C,CAAC,EAAE,CAACN,QAAQ,EAAEF,WAAW,CAAC,CAAC;EAE3B,MAAMc,cAAc,GAAIC,KAAoC,IAAW;IACrE;IACA,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,CAAC,CAAC;IAChEX,cAAc,CAACe,iBAAiB,CAAC;EACnC,CAAC;EAED,oBACErB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAIwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/C7B,OAAA,CAACF,SAAS;MAAC0B,SAAS,EAAE,qBAAsB;MAACM,WAAW,EAAE,iBAAkB;MAACC,eAAe,EAAEZ;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChH7B,OAAA,CAACH,QAAQ;MAACU,QAAQ,EAAEE;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAA3B,EAAA,CArCKD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function (_a) {\n  var client = _a.client,\n      children = _a.children;\n  var ApolloContext = getApolloContext();\n  var parentContext = React.useContext(ApolloContext);\n  var context = React.useMemo(function () {\n    return __assign(__assign({}, parentContext), {\n      client: client || parentContext.client\n    });\n  }, [parentContext, client]);\n  invariant(context.client, 55);\n  return React.createElement(ApolloContext.Provider, {\n    value: context\n  }, children);\n};","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,QAA0B,kCAA1B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAIA,SAASC,gBAAT,QAAiC,oBAAjC;AAOA,OAAO,IAAMC,cAAc,GAA4C,UAACC,EAAD,EAGtE;MAFCC,MAAM;MACNC,QAAQ;AAER,MAAMC,aAAa,GAAGL,gBAAgB,EAAtC;AACA,MAAMM,aAAa,GAAGP,KAAK,CAACQ,UAAN,CAAiBF,aAAjB,CAAtB;AAEA,MAAMG,OAAO,GAAGT,KAAK,CAACU,OAAN,CAAc;AAC5B,iCACKH,aADL,GACkB;AAChBH,YAAM,EAAEA,MAAM,IAAIG,aAAa,CAACH;AADhB,KADlB;AAID,GALe,EAKb,CAACG,aAAD,EAAgBH,MAAhB,CALa,CAAhB;AAOAL,WAAS,CACPU,OAAO,CAACL,MADD,EAEP,EAFO,CAAT;SAGIJ;AAAAW,SACF;AADE,KACFN,QADE;CAjBC","names":["invariant","React","getApolloContext","ApolloProvider","_a","client","children","ApolloContext","parentContext","useContext","context","useMemo","value"],"sources":["/media/rk/disk2/React/crwn-clothing-graphql/node_modules/@apollo/src/react/context/ApolloProvider.tsx"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\n\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"./ApolloContext.js\";\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: ReactTypes.ReactNode | ReactTypes.ReactNode[] | null;\n}\n\nexport const ApolloProvider: ReactTypes.FC<ApolloProviderProps<any>> = ({\n  client,\n  children,\n}) => {\n  const ApolloContext = getApolloContext();\n  const parentContext = React.useContext(ApolloContext);\n\n  const context = React.useMemo(() => {\n    return {\n      ...parentContext,\n      client: client || parentContext.client,\n    };\n  }, [parentContext, client]);\n\n  invariant(\n    context.client,\n    \"ApolloProvider was not passed a client instance. Make \" +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  return (\n    <ApolloContext.Provider value={context}>{children}</ApolloContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
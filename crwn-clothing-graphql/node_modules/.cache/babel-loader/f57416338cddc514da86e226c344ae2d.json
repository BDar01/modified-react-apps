{"ast":null,"code":"/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nexport function getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    oneOf: false,\n    ...options\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl ? 'specifiedByURL' : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable ? 'isRepeatable' : '';\n  const schemaDescription = optionsWithDefault.schemaDescription ? descriptions : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  const oneOf = optionsWithDefault.oneOf ? 'isOneOf' : '';\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name kind }\n        mutationType { name kind }\n        subscriptionType { name kind }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      ${oneOf}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}","map":{"version":3,"sources":["/media/rk/disk2/React/crwn-clothing-graphql/node_modules/graphql/utilities/getIntrospectionQuery.mjs"],"names":["getIntrospectionQuery","options","optionsWithDefault","descriptions","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputValueDeprecation","oneOf","inputDeprecation","str"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7C,QAAMC,kBAAkB,GAAG;AACzBC,IAAAA,YAAY,EAAE,IADW;AAEzBC,IAAAA,cAAc,EAAE,KAFS;AAGzBC,IAAAA,qBAAqB,EAAE,KAHE;AAIzBC,IAAAA,iBAAiB,EAAE,KAJM;AAKzBC,IAAAA,qBAAqB,EAAE,KALE;AAMzBC,IAAAA,KAAK,EAAE,KANkB;AAOzB,OAAGP;AAPsB,GAA3B;AASA,QAAME,YAAY,GAAGD,kBAAkB,CAACC,YAAnB,GAAkC,aAAlC,GAAkD,EAAvE;AACA,QAAMC,cAAc,GAAGF,kBAAkB,CAACE,cAAnB,GACnB,gBADmB,GAEnB,EAFJ;AAGA,QAAMC,qBAAqB,GAAGH,kBAAkB,CAACG,qBAAnB,GAC1B,cAD0B,GAE1B,EAFJ;AAGA,QAAMC,iBAAiB,GAAGJ,kBAAkB,CAACI,iBAAnB,GACtBH,YADsB,GAEtB,EAFJ;;AAIA,WAASM,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,WAAOR,kBAAkB,CAACK,qBAAnB,GAA2CG,GAA3C,GAAiD,EAAxD;AACD;;AAED,QAAMF,KAAK,GAAGN,kBAAkB,CAACM,KAAnB,GAA2B,SAA3B,GAAuC,EAArD;AACA,SAAQ;AACV;AACA;AACA,UAAUF,iBAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYH,YAAa;AACzB,YAAYE,qBAAsB;AAClC;AACA,gBAAgBI,gBAAgB,CAAC,2BAAD,CAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQN,YAAa;AACrB,QAAQC,cAAe;AACvB,QAAQI,KAAM;AACd;AACA;AACA,UAAUL,YAAa;AACvB,cAAcM,gBAAgB,CAAC,2BAAD,CAA8B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBA,gBAAgB,CAAC,2BAAD,CAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUN,YAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQA,YAAa;AACrB;AACA;AACA,QAAQM,gBAAgB,CAAC,cAAD,CAAiB;AACzC,QAAQA,gBAAgB,CAAC,mBAAD,CAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1GE;AA2GD","sourcesContent":["/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nexport function getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    oneOf: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  const oneOf = optionsWithDefault.oneOf ? 'isOneOf' : '';\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name kind }\n        mutationType { name kind }\n        subscriptionType { name kind }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      ${oneOf}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n"]},"metadata":{},"sourceType":"module"}
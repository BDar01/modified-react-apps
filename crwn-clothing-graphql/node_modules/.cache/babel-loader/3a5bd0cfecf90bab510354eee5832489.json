{"ast":null,"code":"import { wrapPromiseWithState } from \"../../../utilities/index.js\";\nimport * as React from \"rehackt\"; // Prevent webpack from complaining about our feature detection of the\n// use property of the React namespace, which is expected not\n// to exist when using current stable versions, and that's fine.\n\nvar useKey = \"use\";\nvar realHook = React[useKey]; // This is named with two underscores to allow this hook to evade typical rules of\n// hooks (i.e. it can be used conditionally)\n\nexport var __use = realHook || function __use(promise) {\n  var statefulPromise = wrapPromiseWithState(promise);\n\n  switch (statefulPromise.status) {\n    case \"pending\":\n      throw statefulPromise;\n\n    case \"rejected\":\n      throw statefulPromise.reason;\n\n    case \"fulfilled\":\n      return statefulPromise.value;\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,QAAqC,6BAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB,C,CAGA;AACA;AACA;;AACA,IAAMC,MAAM,GAAG,KAAf;AACA,IAAMC,QAAQ,GAAGF,KAAK,CAACC,MAAD,CAAtB,C,CAEA;AACA;;AACA,OAAO,IAAME,KAAK,GAChBD,QAAQ,IACR,SAASC,KAAT,CAAuBC,OAAvB,EAA+C;AAC7C,MAAMC,eAAe,GAAGN,oBAAoB,CAACK,OAAD,CAA5C;;AAEA,UAAQC,eAAe,CAACC,MAAxB;AACE,SAAK,SAAL;AACE,YAAMD,eAAN;;AACF,SAAK,UAAL;AACE,YAAMA,eAAe,CAACE,MAAtB;;AACF,SAAK,WAAL;AACE,aAAOF,eAAe,CAACG,KAAvB;AANJ;AAQD,CAbI","names":["wrapPromiseWithState","React","useKey","realHook","__use","promise","statefulPromise","status","reason","value"],"sources":["/media/rk/disk2/React/crwn-clothing-graphql/node_modules/@apollo/src/react/hooks/internal/__use.ts"],"sourcesContent":["import { wrapPromiseWithState } from \"../../../utilities/index.js\";\nimport * as React from \"rehackt\";\n\ntype Use = <T>(promise: Promise<T>) => T;\n// Prevent webpack from complaining about our feature detection of the\n// use property of the React namespace, which is expected not\n// to exist when using current stable versions, and that's fine.\nconst useKey = \"use\" as keyof typeof React;\nconst realHook = React[useKey] as Use | undefined;\n\n// This is named with two underscores to allow this hook to evade typical rules of\n// hooks (i.e. it can be used conditionally)\nexport const __use =\n  realHook ||\n  function __use<TValue>(promise: Promise<TValue>) {\n    const statefulPromise = wrapPromiseWithState(promise);\n\n    switch (statefulPromise.status) {\n      case \"pending\":\n        throw statefulPromise;\n      case \"rejected\":\n        throw statefulPromise.reason;\n      case \"fulfilled\":\n        return statefulPromise.value;\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}
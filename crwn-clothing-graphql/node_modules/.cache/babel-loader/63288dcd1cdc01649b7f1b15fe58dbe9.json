{"ast":null,"code":"import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(40);\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,iBAAT,QAAkC,kCAAlC;AAEA,OAAO,IAAMC,YAAY,GAAG,UAACC,OAAD,EAAkC;AAC5D,MAAI,CAACA,OAAD,IAAY,OAAOC,KAAP,KAAiB,WAAjC,EAA8C;AAC5C,UAAMH,iBAAiB,CAAC,EAAD,CAAvB;AAYD;AACF,CAfM","names":["newInvariantError","checkFetcher","fetcher","fetch"],"sources":["/media/rk/disk2/React/crwn-clothing-graphql/node_modules/@apollo/src/link/http/checkFetcher.ts"],"sourcesContent":["import { newInvariantError } from \"../../utilities/globals/index.js\";\n\nexport const checkFetcher = (fetcher: typeof fetch | undefined) => {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
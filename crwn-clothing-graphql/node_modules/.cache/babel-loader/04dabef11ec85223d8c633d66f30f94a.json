{"ast":null,"code":"import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var serializeFetchParameter = function (p, label) {\n  var serialized;\n\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    var parseError = newInvariantError(42, label, e.message);\n    parseError.parseError = e;\n    throw parseError;\n  }\n\n  return serialized;\n};","map":{"version":3,"mappings":"AAAA,SAASA,iBAAT,QAAkC,kCAAlC;AAOA,OAAO,IAAMC,uBAAuB,GAAG,UAACC,CAAD,EAASC,KAAT,EAAsB;AAC3D,MAAIC,UAAJ;;AACA,MAAI;AACFA,cAAU,GAAGC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAb;AACD,GAFD,CAEE,OAAOK,CAAP,EAAe;AACf,QAAMC,UAAU,GAAGR,iBAAiB,CAClC,EADkC,EAClCG,KADkC,EAClCI,SADkC,CAApC;AAKAC,cAAU,CAACA,UAAX,GAAwBD,CAAxB;AACA,UAAMC,UAAN;AACD;;AACD,SAAOJ,UAAP;AACD,CAdM","names":["newInvariantError","serializeFetchParameter","p","label","serialized","JSON","stringify","e","parseError"],"sources":["/media/rk/disk2/React/crwn-clothing-graphql/node_modules/@apollo/src/link/http/serializeFetchParameter.ts"],"sourcesContent":["import { newInvariantError } from \"../../utilities/globals/index.js\";\nimport type { InvariantError } from \"../../utilities/globals/index.js\";\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e: any) {\n    const parseError = newInvariantError(\n      `Network request failed. %s is not serializable: %s`,\n      label,\n      e.message\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n"]},"metadata":{},"sourceType":"module"}
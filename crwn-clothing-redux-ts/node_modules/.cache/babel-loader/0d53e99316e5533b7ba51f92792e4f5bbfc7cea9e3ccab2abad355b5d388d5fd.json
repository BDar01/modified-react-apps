{"ast":null,"code":"var _jsxFileName = \"/media/rk/disk2/React/Typescript/crwn-clothing-redux/src/components/payment-form/payment-form.component.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { selectCartTotal } from \"../../store/cart/cart.selector\";\nimport { selectCurrentUser } from \"../../store/user/user.selector\";\nimport { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { PaymentFormContainer, FormContainer, PaymentButton } from \"./payment-form.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const amount = useSelector(selectCartTotal);\n  const currentUser = useSelector(selectCurrentUser);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessingPayment(true);\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount * 100\n      })\n    }).then(res => res.json());\n    const {\n      paymentIntent: {\n        client_secret\n      }\n    } = response;\n    const cardDetails = elements.getElement(CardElement);\n    if (cardDetails === null) return;\n    const paymentResult = stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: cardDetails,\n        billing_details: {\n          name: currentUser ? currentUser.displayName : 'Guest'\n        }\n      }\n    });\n    setIsProcessingPayment(false);\n    if ((await paymentResult).error) {\n      alert((await paymentResult).error);\n    } else {\n      if ((await paymentResult).paymentIntent.status === 'succeeded') {\n        alert('Payment Successful');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PaymentFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: paymentHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Credit Card Payment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PaymentButton, {\n        isLoading: isProcessingPayment,\n        buttonType: BUTTON_TYPE_CLASSES.inverted,\n        children: \" Pay Now \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentForm, \"zeZvNGpoSXJVIJ/CUzfiu8Kc5to=\", false, function () {\n  return [useStripe, useElements, useSelector, useSelector];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["useState","useSelector","CardElement","useStripe","useElements","selectCartTotal","selectCurrentUser","BUTTON_TYPE_CLASSES","PaymentFormContainer","FormContainer","PaymentButton","jsxDEV","_jsxDEV","PaymentForm","_s","stripe","elements","amount","currentUser","isProcessingPayment","setIsProcessingPayment","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","then","res","json","paymentIntent","client_secret","cardDetails","getElement","paymentResult","confirmCardPayment","payment_method","card","billing_details","name","displayName","error","alert","status","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","isLoading","buttonType","inverted","_c","$RefreshReg$"],"sources":["/media/rk/disk2/React/Typescript/crwn-clothing-redux/src/components/payment-form/payment-form.component.tsx"],"sourcesContent":["import { useState, FormEvent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\n\nimport { selectCartTotal } from \"../../store/cart/cart.selector\";\nimport { selectCurrentUser } from \"../../store/user/user.selector\";\nimport { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { PaymentFormContainer, FormContainer, PaymentButton } from \"./payment-form.styles\";\n\nconst PaymentForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const amount = useSelector(selectCartTotal);\n    const currentUser = useSelector(selectCurrentUser);\n\n    const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n    const paymentHandler = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (!stripe || !elements) {\n            return;\n        }\n\n        setIsProcessingPayment(true);\n        \n        const response = await fetch('/.netlify/functions/create-payment-intent', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ amount: amount * 100 })\n        }).then(res => res.json());\n\n        const {paymentIntent: {client_secret}} = response;\n\n        const cardDetails = elements.getElement(CardElement);\n\n        if (cardDetails === null) return;\n\n        const paymentResult = stripe.confirmCardPayment(client_secret, {\n            payment_method: {\n                card: cardDetails,\n                billing_details: {\n                    name: currentUser ? currentUser.displayName : 'Guest'\n                }\n            }\n        });\n\n        setIsProcessingPayment(false);\n\n        if ((await paymentResult).error) {\n            alert((await paymentResult).error);\n        } else {\n            if ((await paymentResult).paymentIntent.status === 'succeeded') {\n                alert('Payment Successful');\n            }\n        }\n    };\n    \n    return (\n        <PaymentFormContainer>\n            <FormContainer onSubmit={paymentHandler}>\n                <h2> Credit Card Payment: </h2>\n                <CardElement />\n                <PaymentButton isLoading={isProcessingPayment} buttonType={BUTTON_TYPE_CLASSES.inverted}> Pay Now </PaymentButton>\n            </FormContainer>\n        </PaymentFormContainer>\n    );\n};\n\nexport default PaymentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
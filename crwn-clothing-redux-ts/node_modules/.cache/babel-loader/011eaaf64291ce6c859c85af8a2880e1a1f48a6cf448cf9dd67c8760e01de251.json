{"ast":null,"code":"var _jsxFileName = \"/media/rk/disk2/React/crwn-clothing-redux/src/components/payment-form/payment-form.component.jsx\",\n  _s = $RefreshSig$();\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { PaymentFormContainer, FormContainer } from \"./payment-form.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 10000\n      })\n    }).then(res => res.json());\n    console.log(response);\n  };\n  return /*#__PURE__*/_jsxDEV(PaymentFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Credit Card Payment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: BUTTON_TYPE_CLASSES.inverted,\n        children: \" Pay Now \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["CardElement","useStripe","useElements","Button","BUTTON_TYPE_CLASSES","PaymentFormContainer","FormContainer","jsxDEV","_jsxDEV","PaymentForm","_s","stripe","elements","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonType","inverted","_c","$RefreshReg$"],"sources":["/media/rk/disk2/React/crwn-clothing-redux/src/components/payment-form/payment-form.component.jsx"],"sourcesContent":["import { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { PaymentFormContainer, FormContainer } from \"./payment-form.styles\";\n\nconst PaymentForm = () => {\n    const stripe = useStripe();\n\n    const elements = useElements();\n\n    const paymentHandler = async (e) => {\n        e.preventDefault();\n\n        if (!stripe || !elements) {\n            return;\n        }\n        \n        const response = await fetch('/.netlify/functions/create-payment-intent', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ amount: 10000 })\n        }).then(res => res.json());\n\n        console.log(response);\n    };\n    \n    return (\n        <PaymentFormContainer>\n            <FormContainer>\n                <h2> Credit Card Payment: </h2>\n                <CardElement />\n                <Button buttonType={BUTTON_TYPE_CLASSES.inverted}> Pay Now </Button>\n            </FormContainer>\n        </PaymentFormContainer>\n    );\n};\n\nexport default PaymentForm;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAE7E,OAAOC,MAAM,IAAIC,mBAAmB,QAAQ,4BAA4B;AACxE,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAE1B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,cAAc,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACJ,MAAM,IAAI,CAACC,QAAQ,EAAE;MACtB;IACJ;IAEA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAM,CAAC;IAC1C,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAE1BC,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;EACzB,CAAC;EAED,oBACIR,OAAA,CAACH,oBAAoB;IAAAwB,QAAA,eACjBrB,OAAA,CAACF,aAAa;MAAAuB,QAAA,gBACVrB,OAAA;QAAAqB,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BzB,OAAA,CAACR,WAAW;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfzB,OAAA,CAACL,MAAM;QAAC+B,UAAU,EAAE9B,mBAAmB,CAAC+B,QAAS;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAhCID,WAAW;EAAA,QACER,SAAS,EAEPC,WAAW;AAAA;AAAAkC,EAAA,GAH1B3B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
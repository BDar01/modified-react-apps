{"ast":null,"code":"var _jsxFileName = \"/media/rk/disk2/crwn-clothing/src/contexts/user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\";\n\n// actual value to access\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n};\nconst userReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case USER_ACTION_TYPES.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: payload\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in userReducer`);\n  }\n};\nconst INITIAL_STATE = {\n  currentUser: null\n};\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  //const [currentUser, setCurrentUser] = useState(null);\n  const [{\n    currentUser\n  }, dispatch] = useReducer(userReducer, INITIAL_STATE);\n  console.log(currentUser);\n  const setCurrentUser = user => {\n    dispatch({\n      type: USER_ACTION_TYPES.SET_CURRENT_USER,\n      payload: user\n    });\n  };\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n      console.log(user);\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n_s(UserProvider, \"LEGgnQQkn6KP/UwKXiE9YUZIC0c=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","onAuthStateChangedListener","createUserDocumentFromAuth","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","USER_ACTION_TYPES","SET_CURRENT_USER","userReducer","state","action","type","payload","Error","INITIAL_STATE","UserProvider","children","_s","dispatch","console","log","user","value","unsubscribe","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/rk/disk2/crwn-clothing/src/contexts/user.context.jsx"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\";\n\n// actual value to access\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null\n});\n\nexport const USER_ACTION_TYPES = {\n    SET_CURRENT_USER: 'SET_CURRENT_USER'\n}\n\nconst userReducer = (state, action) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case USER_ACTION_TYPES.SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: payload\n            };\n        default:\n            throw new Error(`Unhandled type ${type} in userReducer`);\n    }\n};\n\nconst INITIAL_STATE = {\n    currentUser: null\n}\n\nexport const UserProvider = ({ children }) => {\n    //const [currentUser, setCurrentUser] = useState(null);\n    const [ { currentUser }, dispatch ] = useReducer(userReducer, INITIAL_STATE);\n    console.log(currentUser);\n    \n    const setCurrentUser = (user) => {\n        dispatch({ type: USER_ACTION_TYPES.SET_CURRENT_USER, payload: user});\n    };\n    \n    const value = {currentUser, setCurrentUser};\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChangedListener((user) => {\n            if (user) {\n                createUserDocumentFromAuth(user);\n            }\n            \n            console.log(user);\n            setCurrentUser(user);\n        });\n\n        return unsubscribe;\n    }, []);\n\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n}\n\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC5D,SAASC,0BAA0B,EAAEC,0BAA0B,QAAQ,kCAAkC;;AAEzG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC;EACrCQ,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAOC,IAAI;IACP,KAAKL,iBAAiB,CAACC,gBAAgB;MACnC,OAAO;QACH,GAAGE,KAAK;QACRL,WAAW,EAAEQ;MACjB,CAAC;IACL;MACI,MAAM,IAAIC,KAAK,CAAC,kBAAkBF,IAAI,iBAAiB,CAAC;EAChE;AACJ,CAAC;AAED,MAAMG,aAAa,GAAG;EAClBV,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C;EACA,MAAM,CAAE;IAAEb;EAAY,CAAC,EAAEc,QAAQ,CAAE,GAAGpB,UAAU,CAACU,WAAW,EAAEM,aAAa,CAAC;EAC5EK,OAAO,CAACC,GAAG,CAAChB,WAAW,CAAC;EAExB,MAAMC,cAAc,GAAIgB,IAAI,IAAK;IAC7BH,QAAQ,CAAC;MAAEP,IAAI,EAAEL,iBAAiB,CAACC,gBAAgB;MAAEK,OAAO,EAAES;IAAI,CAAC,CAAC;EACxE,CAAC;EAED,MAAMC,KAAK,GAAG;IAAClB,WAAW;IAAEC;EAAc,CAAC;EAE3CR,SAAS,CAAC,MAAM;IACZ,MAAM0B,WAAW,GAAGxB,0BAA0B,CAAEsB,IAAI,IAAK;MACrD,IAAIA,IAAI,EAAE;QACNrB,0BAA0B,CAACqB,IAAI,CAAC;MACpC;MAEAF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBhB,cAAc,CAACgB,IAAI,CAAC;IACxB,CAAC,CAAC;IAEF,OAAOE,WAAW;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOrB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAN,QAAA,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;AAAAX,EAAA,CAzBYF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
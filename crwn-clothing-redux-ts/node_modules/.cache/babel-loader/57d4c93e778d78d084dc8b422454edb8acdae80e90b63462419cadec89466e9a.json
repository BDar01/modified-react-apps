{"ast":null,"code":"import { fetchCategoriesStart, fetchCategoriesSuccess, fetchCategoriesFailed } from \"./category.action\";\nexport const CATEGORIES_INITIAL_STATE = {\n  categories: [],\n  isLoading: false,\n  error: null\n};\nexport const categoriesReducer = (state = CATEGORIES_INITIAL_STATE, action) => {\n  if (fetchCategoriesStart.match(action)) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n  if (fetchCategoriesSuccess.match(action)) {\n    return {\n      ...state,\n      isLoading: false,\n      categories: action.payload\n    };\n  }\n  if (fetchCategoriesFailed.match(action)) {\n    return {\n      ...state,\n      isLoading: false,\n      error: action.payload\n    };\n  }\n  return state;\n};","map":{"version":3,"names":["fetchCategoriesStart","fetchCategoriesSuccess","fetchCategoriesFailed","CATEGORIES_INITIAL_STATE","categories","isLoading","error","categoriesReducer","state","action","match","payload"],"sources":["/media/rk/disk2/React/Typescript/crwn-clothing-redux-ts/src/store/categories/category.reducer.ts"],"sourcesContent":["import { AnyAction } from \"redux-saga\";\nimport { Category } from \"./category.types\";\nimport { fetchCategoriesStart, fetchCategoriesSuccess, fetchCategoriesFailed } from \"./category.action\";\n\nexport type CategoriesState = {\n    readonly categories: Category[];\n    readonly isLoading: boolean;\n    readonly error: Error | null;\n}\n\nexport const CATEGORIES_INITIAL_STATE: CategoriesState = {\n    categories: [],\n    isLoading: false,\n    error: null\n};\n\nexport const categoriesReducer = (state = CATEGORIES_INITIAL_STATE, action: AnyAction): CategoriesState => {\n\n    if(fetchCategoriesStart.match(action)) {\n        return { ...state, isLoading: true };\n    }\n\n    if(fetchCategoriesSuccess.match(action)) {\n        return { ...state,  isLoading: false, categories: action.payload};\n    }\n    \n    if(fetchCategoriesFailed.match(action)) {\n        return { ...state,  isLoading: false, error: action.payload};\n    }\n\n    return state;\n};"],"mappings":"AAEA,SAASA,oBAAoB,EAAEC,sBAAsB,EAAEC,qBAAqB,QAAQ,mBAAmB;AAQvG,OAAO,MAAMC,wBAAyC,GAAG;EACrDC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,GAAGL,wBAAwB,EAAEM,MAAiB,KAAsB;EAEvG,IAAGT,oBAAoB,CAACU,KAAK,CAACD,MAAM,CAAC,EAAE;IACnC,OAAO;MAAE,GAAGD,KAAK;MAAEH,SAAS,EAAE;IAAK,CAAC;EACxC;EAEA,IAAGJ,sBAAsB,CAACS,KAAK,CAACD,MAAM,CAAC,EAAE;IACrC,OAAO;MAAE,GAAGD,KAAK;MAAGH,SAAS,EAAE,KAAK;MAAED,UAAU,EAAEK,MAAM,CAACE;IAAO,CAAC;EACrE;EAEA,IAAGT,qBAAqB,CAACQ,KAAK,CAACD,MAAM,CAAC,EAAE;IACpC,OAAO;MAAE,GAAGD,KAAK;MAAGH,SAAS,EAAE,KAAK;MAAEC,KAAK,EAAEG,MAAM,CAACE;IAAO,CAAC;EAChE;EAEA,OAAOH,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nimport { getAuth, signInWithRedirect, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, GoogleAuthProvider } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDE0x3VOLGamvZAvTeXLffabM_WtNsEnuM\",\n  authDomain: \"crwn-clothing-db-93f7b.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-93f7b\",\n  storageBucket: \"crwn-clothing-db-93f7b.firebasestorage.app\",\n  messagingSenderId: \"270041737751\",\n  appId: \"1:270041737751:web:449c79d9f3015a2a240a52\"\n};\n\n/* const firebaseApp = */\ninitializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('Done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data());\n};\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error);\n    }\n  }\n\n  //return userDocRef;\n  return userSnapshot;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    return;\n  }\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    return;\n  }\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["initializeApp","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","getAuth","signInWithRedirect","signInWithPopup","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","docs","map","docSnapshot","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","getCurrentUser","Promise","resolve","reject","unsubscribe"],"sources":["/media/rk/disk2/React/Typescript/crwn-clothing-redux/src/utils/firebase/firebase.utils.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs, QueryDocumentSnapshot } from 'firebase/firestore';\nimport { getAuth, signInWithRedirect, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, GoogleAuthProvider, User, NextOrObserver } from 'firebase/auth';\n\nimport { Category } from '../../store/categories/category.types';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDE0x3VOLGamvZAvTeXLffabM_WtNsEnuM\",\n    authDomain: \"crwn-clothing-db-93f7b.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-93f7b\",\n    storageBucket: \"crwn-clothing-db-93f7b.firebasestorage.app\",\n    messagingSenderId: \"270041737751\",\n    appId: \"1:270041737751:web:449c79d9f3015a2a240a52\"\n  };\n\n/* const firebaseApp = */ initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport type ObjectToAdd = {\n    title: string;\n}\n\nexport const addCollectionAndDocuments = async <T extends ObjectToAdd>(collectionKey: string, objectsToAdd: T[]): Promise<void> => {\n    const collectionRef = collection(db, collectionKey);\n    const batch = writeBatch(db);\n\n    objectsToAdd.forEach((object) => {\n        const docRef = doc(collectionRef, object.title.toLowerCase());\n        batch.set(docRef, object);\n    });\n\n    await batch.commit();\n    console.log('Done');\n};\n\nexport const getCategoriesAndDocuments = async (): Promise<Category[]> => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data() as Category);\n};\n\nexport type AdditionalInformation = {\n    displayName?: string;\n}\n\nexport type UserData = {\n    email: string;\n    createdAt: Date;\n    displayName: string;\n}\n\nexport const createUserDocumentFromAuth = async (userAuth: User, additionalInformation = {} as AdditionalInformation): Promise<void | QueryDocumentSnapshot<UserData>> => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef);\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists());\n\n    if(!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation,\n            });\n        } catch (error) {\n            console.log('error creating the user', error);\n        }\n    }\n\n    //return userDocRef;\n    return userSnapshot as QueryDocumentSnapshot<UserData>;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email: string, password: string) => {\n    if(!email || !password) {\n        return;\n    }\n\n    return await createUserWithEmailAndPassword(auth, email, password)\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email: string, password: string) => {\n    if(!email || !password) {\n        return;\n    }\n\n    return await signInWithEmailAndPassword(auth, email, password)\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback: NextOrObserver<User>) => onAuthStateChanged(auth, callback);\n\nexport const getCurrentUser = (): Promise<User | null> => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = onAuthStateChanged(\n            auth, \n            (userAuth) => {\n                unsubscribe();\n                resolve(userAuth);\n            },\n            reject\n        );\n    });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
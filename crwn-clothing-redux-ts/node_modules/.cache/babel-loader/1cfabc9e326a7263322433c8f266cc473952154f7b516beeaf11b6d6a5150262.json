{"ast":null,"code":"import { takeLatest as _takeLatest, put as _put, all as _all, call as _call } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield _call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    if (userSnapshot) {\n      yield _put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const userCredential = yield _call(createAuthUserWithEmailAndPassword, email, password);\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _put(signUpSuccess(user, {\n        displayName\n      }));\n    }\n  } catch (error) {\n    yield _put(signUpFailed(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalDetails\n  }\n}) {\n  yield _call(getSnapshotFromUserAuth, user, additionalDetails);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield _call(signInWithGooglePopup);\n    yield _call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const userCredential = yield _call(signInAuthUserWithEmailAndPassword, email, password);\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield _call(signOutUser);\n    yield _put(signOutSuccess());\n  } catch (error) {\n    yield _put(signOutFailed(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield _call(getCurrentUser);\n    if (!userAuth) {\n      return;\n    }\n    yield _call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* onSignUpStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n;\nexport function* onSignOutStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\n;\nexport function* onEmailSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onGoogleSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onCheckUserSession() {\n  yield _takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* userSagas() {\n  yield _all([_call(onCheckUserSession), _call(onGoogleSignInStart), _call(onEmailSignInStart), _call(onSignUpStart), _call(onSignUpSuccess), _call(onSignOutStart)]);\n}\n;","map":{"version":3,"names":["USER_ACTION_TYPES","signInSuccess","signInFailed","signUpSuccess","signUpFailed","signOutSuccess","signOutFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","createAuthUserWithEmailAndPassword","signOutUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","call","put","id","data","error","signUp","payload","email","password","displayName","userCredential","user","signInAfterSignUp","signInWithGoogle","signInWithEmail","signOut","isUserAuthenticated","onSignUpStart","takeLatest","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas","all"],"sources":["/media/rk/disk2/React/Typescript/crwn-clothing-redux/src/store/user/user.saga.ts"],"sourcesContent":["import { takeLatest, put, all, call } from \"typed-redux-saga/macro\";\n\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { User } from \"firebase/auth\";\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed, EmailSignInStart, SignUpStart, SignUpSuccess } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser, AdditionalInformation } from \"../../utils/firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth: User, additionalDetails?: AdditionalInformation) {\n    try {\n        const userSnapshot = yield* call(createUserDocumentFromAuth, userAuth, additionalDetails);\n        if (userSnapshot) {\n            yield* put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n        }\n    } catch (error) {\n        yield* put(signInFailed(error as Error));\n    }\n};\n\nexport function* signUp({ payload: { email, password, displayName } }: SignUpStart) {\n    try {\n        const userCredential = yield* call(createAuthUserWithEmailAndPassword, email, password);\n\n        if (userCredential) {\n            const { user } = userCredential;\n            yield* put(signUpSuccess(user, { displayName }));\n        }\n    } catch (error) {\n        yield* put(signUpFailed(error as Error));\n    }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalDetails } }: SignUpSuccess) {\n    yield* call(getSnapshotFromUserAuth, user, additionalDetails);\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield* call(signInWithGooglePopup);\n        yield* call(getSnapshotFromUserAuth, user);\n    } catch (error) {\n        yield* put(signInFailed(error as Error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }: EmailSignInStart) {\n    try {\n        const userCredential = yield* call(signInAuthUserWithEmailAndPassword, email, password);\n\n        if (userCredential) {\n            const { user } = userCredential;\n            yield* call(getSnapshotFromUserAuth, user);\n        }\n    } catch (error) {\n        yield* put(signInFailed(error as Error));\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield* call(signOutUser);\n        yield* put(signOutSuccess());\n    } catch (error) {\n        yield* put(signOutFailed(error as Error));\n    }\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield* call(getCurrentUser);\n        if (!userAuth) { return; }\n        yield* call(getSnapshotFromUserAuth, userAuth);\n\n    } catch (error) {\n        yield* put(signInFailed(error as Error));\n    }\n};\n\nexport function* onSignUpStart() {\n    yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n};\n\nexport function* onSignUpSuccess() {\n    yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n};\n\nexport function* onSignOutStart() {\n    yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n};\n\nexport function* onEmailSignInStart() {\n    yield* takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* onGoogleSignInStart() {\n    yield* takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onCheckUserSession() {\n    yield* takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n};\n\nexport function* userSagas() {\n    yield* all([call(onCheckUserSession), call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignUpStart), call(onSignUpSuccess), call(onSignOutStart)]);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { takeLatest, put, all, call, debounce } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) {\n      return;\n    }\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* userSagas() {\n  yield all([call(onCheckUserSession)]);\n}\n;","map":{"version":3,"names":["takeLatest","put","all","call","debounce","USER_ACTION_TYPES","signInSuccess","signInFailed","getCurrentUser","createUserDocumentFromAuth","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","id","data","error","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"sources":["/media/rk/disk2/React/crwn-clothing-redux/src/store/user/user.saga.js"],"sourcesContent":["import { takeLatest, put, all, call, debounce } from \"redux-saga/effects\";\n\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n    try {\n        const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield call(getCurrentUser);\n        if (!userAuth) { return; }\n        yield call(getSnapshotFromUserAuth, userAuth);\n\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n};\n\nexport function* onCheckUserSession() {\n    yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n};\n\nexport function* userSagas() {\n    yield all([call(onCheckUserSession)]);\n};"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AAEzE,SAASC,iBAAiB,QAAQ,cAAc;AAChD,SAASC,aAAa,EAAEC,YAAY,QAAQ,eAAe;AAC3D,SAASC,cAAc,EAAEC,0BAA0B,QAAQ,qCAAqC;AAEhG,OAAO,UAAUC,uBAAuBA,CAACC,QAAQ,EAAEC,iBAAiB,EAAE;EAClE,IAAI;IACA,MAAMC,YAAY,GAAG,MAAMV,IAAI,CAACM,0BAA0B,EAAEE,QAAQ,EAAEC,iBAAiB,CAAC;IACxF,MAAMX,GAAG,CAACK,aAAa,CAAC;MAACQ,EAAE,EAAED,YAAY,CAACC,EAAE;MAAE,GAAGD,YAAY,CAACE,IAAI,CAAC;IAAC,CAAC,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMf,GAAG,CAACM,YAAY,CAACS,KAAK,CAAC,CAAC;EAClC;AACJ;AAAC;AAED,OAAO,UAAUC,mBAAmBA,CAAA,EAAG;EACnC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMR,IAAI,CAACK,cAAc,CAAC;IAC3C,IAAI,CAACG,QAAQ,EAAE;MAAE;IAAQ;IACzB,MAAMR,IAAI,CAACO,uBAAuB,EAAEC,QAAQ,CAAC;EAEjD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZ,MAAMf,GAAG,CAACM,YAAY,CAACS,KAAK,CAAC,CAAC;EAClC;AACJ;AAAC;AAED,OAAO,UAAUE,kBAAkBA,CAAA,EAAG;EAClC,MAAMlB,UAAU,CAACK,iBAAiB,CAACc,kBAAkB,EAAEF,mBAAmB,CAAC;AAC/E;AAAC;AAED,OAAO,UAAUG,SAASA,CAAA,EAAG;EACzB,MAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,kBAAkB,CAAC,CAAC,CAAC;AACzC;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
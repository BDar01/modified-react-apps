{"ast":null,"code":"import { compose, legacy_createStore as createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { rootReducer } from \"./root-reducer\";\nimport { rootSaga } from \"./root-saga\";\n//import { thunk } from  \"redux-thunk\";\n//import { loggerMiddleware } from \"./middleware/logger\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport storage from 'redux-persist/lib/storage';\nimport logger from \"redux-logger\";\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [process.env.NODE_ENV !== 'production' && logger, /*thunk*/sagaMiddleware].filter(Boolean);\nconst composeEnhancer = process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["compose","legacy_createStore","createStore","applyMiddleware","persistStore","persistReducer","rootReducer","rootSaga","createSagaMiddleware","storage","logger","persistConfig","key","whitelist","sagaMiddleware","persistedReducer","middleWares","process","env","NODE_ENV","filter","Boolean","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composedEnhancers","store","undefined","run","persistor"],"sources":["/media/rk/disk2/React/crwn-clothing-redux/src/store/store.js"],"sourcesContent":["import { compose, legacy_createStore as createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { rootReducer } from \"./root-reducer\";\nimport { rootSaga } from \"./root-saga\";\n//import { thunk } from  \"redux-thunk\";\n//import { loggerMiddleware } from \"./middleware/logger\";\n\nimport createSagaMiddleware from \"redux-saga\";\n\nimport storage from 'redux-persist/lib/storage';\nimport logger from \"redux-logger\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart']\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [process.env.NODE_ENV !== 'production' && logger, /*thunk*/ sagaMiddleware].filter(Boolean);\n\nconst composeEnhancer = (process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,OAAO,EAAEC,kBAAkB,IAAIC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACnF,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;;AAEA,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,MAAM,MAAM,cAAc;AAEjC,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXH,OAAO;EACPI,SAAS,EAAE,CAAC,MAAM;AACtB,CAAC;AAED,MAAMC,cAAc,GAAGN,oBAAoB,CAAC,CAAC;AAE7C,MAAMO,gBAAgB,GAAGV,cAAc,CAACM,aAAa,EAAEL,WAAW,CAAC;AAEnE,MAAMU,WAAW,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIT,MAAM,EAAE,SAAUI,cAAc,CAAC,CAACM,MAAM,CAACC,OAAO,CAAC;AAE/G,MAAMC,eAAe,GAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAII,MAAM,IAAIA,MAAM,CAACC,oCAAoC,IAAKxB,OAAO;AAEnI,MAAMyB,iBAAiB,GAAGH,eAAe,CAACnB,eAAe,CAAC,GAAGa,WAAW,CAAC,CAAC;AAE1E,OAAO,MAAMU,KAAK,GAAGxB,WAAW,CAACa,gBAAgB,EAAEY,SAAS,EAAEF,iBAAiB,CAAC;AAEhFX,cAAc,CAACc,GAAG,CAACrB,QAAQ,CAAC;AAE5B,OAAO,MAAMsB,SAAS,GAAGzB,YAAY,CAACsB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { takeLatest, put, all, call, debounce } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield call(createAuthUserWithEmailAndPassword, email, password);\n    yield put(signUpSuccess(user, {\n      displayName\n    }));\n  } catch (error) {\n    yield put(signUpFailed(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalDetails\n  }\n}) {\n  yield call(getSnapshotFromUserAuth, user, additionalDetails);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call(signInWithGooglePopup);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield call(signInAuthUserWithEmailAndPassword, email, password);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield call(s);\n  } catch (error) {\n    yield put(signOutFailed(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) {\n      return;\n    }\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* userSagas() {\n  yield all([call(onCheckUserSession), call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\n;","map":{"version":3,"names":["takeLatest","put","all","call","debounce","USER_ACTION_TYPES","signInSuccess","signInFailed","signUpSuccess","signUpFailed","signOutSuccess","signOutFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","createAuthUserWithEmailAndPassword","signOutUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","id","data","error","signUp","payload","email","password","displayName","user","signInAfterSignUp","signInWithGoogle","signInWithEmail","signOut","s","isUserAuthenticated","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"sources":["/media/rk/disk2/React/crwn-clothing-redux/src/store/user/user.saga.js"],"sourcesContent":["import { takeLatest, put, all, call, debounce } from \"redux-saga/effects\";\n\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from \"../../utils/firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n    try {\n        const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n};\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n    try {\n        const { user } = yield call(createAuthUserWithEmailAndPassword, email, password);\n        yield put(signUpSuccess(user, { displayName }));\n    } catch (error) {\n        yield put(signUpFailed(error));\n    }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalDetails } }) {\n    yield call(getSnapshotFromUserAuth, user, additionalDetails);\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield call(signInWithGooglePopup);\n        yield call(getSnapshotFromUserAuth, user);\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield call(signInAuthUserWithEmailAndPassword, email, password);\n        yield call(getSnapshotFromUserAuth, user);\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield call(s)\n    } catch (error) {\n        yield put(signOutFailed(error));\n    }\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield call(getCurrentUser);\n        if (!userAuth) { return; }\n        yield call(getSnapshotFromUserAuth, userAuth);\n\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n};\n\nexport function* onSignUpStart() {\n    yield takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n};\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n};\n\nexport function* onSignOutStart() {\n    yield takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onCheckUserSession() {\n    yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n};\n\nexport function* userSagas() {\n    yield all([call(onCheckUserSession), call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignUpStart), call(onSignUpSuccess)]);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, createUserWithEmailAndPassword, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDE0x3VOLGamvZAvTeXLffabM_WtNsEnuM\",\n  authDomain: \"crwn-clothing-db-93f7b.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-93f7b\",\n  storageBucket: \"crwn-clothing-db-93f7b.firebasestorage.app\",\n  messagingSenderId: \"270041737751\",\n  appId: \"1:270041737751:web:449c79d9f3015a2a240a52\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    return;\n  }\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","createUserWithEmailAndPassword","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password"],"sources":["/media/rk/disk2/React2/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, createUserWithEmailAndPassword, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDE0x3VOLGamvZAvTeXLffabM_WtNsEnuM\",\n    authDomain: \"crwn-clothing-db-93f7b.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-93f7b\",\n    storageBucket: \"crwn-clothing-db-93f7b.firebasestorage.app\",\n    messagingSenderId: \"270041737751\",\n    appId: \"1:270041737751:web:449c79d9f3015a2a240a52\"\n  };\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef);\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists());\n\n    if(!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation,\n            });\n        } catch (error) {\n            console.log('error creating the user', error.message);\n        }\n    }\n\n    return userDocRef;\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if(!email || !password) {\n        return;\n    }\n\n    return await createUserWithEmailAndPassword(auth, email, password)\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,8BAA8B,EAAEC,kBAAkB,QAAQ,eAAe;AAChI,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,4CAA4C;EAC3DC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAEH,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAIb,kBAAkB,CAAC,CAAC;AAC/Ca,cAAc,CAACC,mBAAmB,CAAC;EAC/BC,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAMqB,qBAAqB,GAAGA,CAAA,KAAMnB,eAAe,CAACkB,IAAI,EAAEH,cAAc,CAAC;AAChF,OAAO,MAAMK,wBAAwB,GAAGA,CAAA,KAAMrB,kBAAkB,CAACmB,IAAI,EAAEH,cAAc,CAAC;AAEtF,OAAO,MAAMM,EAAE,GAAGlB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMmB,0BAA0B,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,qBAAqB,KAAK;EACjF,MAAMC,UAAU,GAAGrB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACG,GAAG,CAAC;EAEjDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAMxB,MAAM,CAACoB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EACzBF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,CAAC,CAAC,CAAC;EAElC,IAAG,CAACD,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;IACvB,MAAM;MAACC,WAAW;MAAEC;IAAK,CAAC,GAAGT,QAAQ;IACrC,MAAMU,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACA,MAAM5B,MAAM,CAACmB,UAAU,EAAE;QACrBM,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGT;MACP,CAAC,CAAC;IACN,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,KAAK,CAACC,OAAO,CAAC;IACzD;EACJ;EAEA,OAAOX,UAAU;AACrB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,MAAAA,CAAOL,KAAK,EAAEM,QAAQ,KAAK;EACzE,IAAG,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;IACpB;EACJ;EAEA,OAAO,MAAMrC,8BAA8B,CAACiB,IAAI,EAAEc,KAAK,EAAEM,QAAQ,CAAC;AACtE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/media/rk/disk2/React/Typescript/crwn-clothing-redux/src/components/button/button.component.tsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let BUTTON_TYPE_CLASSES = /*#__PURE__*/function (BUTTON_TYPE_CLASSES) {\n  BUTTON_TYPE_CLASSES[\"base\"] = \"base\";\n  BUTTON_TYPE_CLASSES[\"inverted\"] = \"inverted\";\n  BUTTON_TYPE_CLASSES[\"google\"] = \"google-sign-in\";\n  return BUTTON_TYPE_CLASSES;\n}({});\n;\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => ({\n  [BUTTON_TYPE_CLASSES.base]: BaseButton,\n  [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n  [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n})[buttonType];\nexport type;\nconst Button = ({\n  children,\n  buttonType,\n  isLoading,\n  ...otherProps\n}) => {\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    disabled: isLoading,\n    ...otherProps,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(ButtonSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","ButtonSpinner","jsxDEV","_jsxDEV","BUTTON_TYPE_CLASSES","getButton","buttonType","base","google","inverted","type","Button","children","isLoading","otherProps","CustomButton","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/rk/disk2/React/Typescript/crwn-clothing-redux/src/components/button/button.component.tsx"],"sourcesContent":["import { FC } from 'react';\nimport {BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner} from './button.styles'\n\nexport enum BUTTON_TYPE_CLASSES {\n    base = 'base',\n    inverted = 'inverted',\n    google = 'google-sign-in',\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton => (\n    {\n        [BUTTON_TYPE_CLASSES.base]: BaseButton,\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n    }[buttonType]\n);\n\nexport type     \n\nconst Button = ({children, buttonType, isLoading, ...otherProps}) => {\n    const CustomButton = getButton(buttonType);\n    return (\n        <CustomButton disabled={isLoading} {...otherProps}>\n            {isLoading ? <ButtonSpinner /> : children}\n        </CustomButton>\n    )\n};\n\nexport default Button;"],"mappings":";AACA,SAAQA,UAAU,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,aAAa,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7F,WAAYC,mBAAmB,0BAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAA,OAAnBA,mBAAmB;AAAA;AAI9B;AAED,MAAMC,SAAS,GAAGA,CAACC,UAAU,GAAGF,mBAAmB,CAACG,IAAI,KACpD;EACI,CAACH,mBAAmB,CAACG,IAAI,GAAGT,UAAU;EACtC,CAACM,mBAAmB,CAACI,MAAM,GAAGT,kBAAkB;EAChD,CAACK,mBAAmB,CAACK,QAAQ,GAAGT;AACpC,CAAC,EAACM,UAAU,CACf;AAED,OAAOI,IAAI;AAEX,MAAMC,MAAM,GAAGA,CAAC;EAACC,QAAQ;EAAEN,UAAU;EAAEO,SAAS;EAAE,GAAGC;AAAU,CAAC,KAAK;EACjE,MAAMC,YAAY,GAAGV,SAAS,CAACC,UAAU,CAAC;EAC1C,oBACIH,OAAA,CAACY,YAAY;IAACC,QAAQ,EAAEH,SAAU;IAAA,GAAKC,UAAU;IAAAF,QAAA,EAC5CC,SAAS,gBAAGV,OAAA,CAACF,aAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAGR;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEvB,CAAC;AAACC,EAAA,GAPIV,MAAM;AASZ,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}